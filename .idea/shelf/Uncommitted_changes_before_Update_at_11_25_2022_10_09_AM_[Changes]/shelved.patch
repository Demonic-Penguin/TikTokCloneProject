Index: app/src/main/java/com/example/tiktokcloneproject/HomeScreenActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tiktokcloneproject;\r\n\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.tiktokcloneproject.adapters.VideoAdapter;\r\nimport com.example.tiktokcloneproject.model.Video;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.firestore.Source;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class HomeScreenActivity extends Activity implements View.OnClickListener{\r\n\r\n    private Button btnProfile;\r\n    private Button btnSearch, btnSwipe, btnAddVideo;\r\n    private TextView tvVideo; // DE TEST. Sau nay sua thanh clip de xem\r\n    private ViewPager2 viewPager2;\r\n    List<Video> videos;\r\n    VideoAdapter videoAdapter;\r\n\r\n    FirebaseAuth mAuth;\r\n    FirebaseUser user;\r\n    FirebaseFirestore db;\r\n\r\n    StorageReference storageRef;\r\n    Uri videoUri;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.Theme_TikTokCloneProject);\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home_screen);\r\n\r\n        tvVideo = (TextView) findViewById(R.id.tvVideo);\r\n        btnProfile = (Button) findViewById(R.id.btnProfile);\r\n        btnSearch=(Button) findViewById(R.id.btnSearch);\r\n        btnSwipe = (Button) findViewById(R.id.btnSwipe);\r\n\r\n\r\n        btnProfile.setOnClickListener(this);\r\n        btnSearch.setOnClickListener(this);\r\n        btnSwipe.setOnClickListener(this);\r\n        mAuth = FirebaseAuth.getInstance();\r\n        user = mAuth.getCurrentUser();\r\n        db = FirebaseFirestore.getInstance();\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n        viewPager2 = findViewById(R.id.viewPager);\r\n        videos = new ArrayList<>();\r\n        videoAdapter = new VideoAdapter(this, videos);\r\n\r\n\r\n\r\n//        VideoObject videoObject1 = new VideoObject(\"https://firebasestorage.googleapis.com/v0/b/toptop-android.appspot.com/o/video_2022-11-01_10-13-57.mp4?alt=media&token=42fbd886-ec46-418b-aee1-368eafb7167a\", \"1\", \"1\");\r\n//        videoObjects.add(videoObject1);\r\n//\r\n//        VideoObject videoObject2 = new VideoObject(\"https://firebasestorage.googleapis.com/v0/b/toptop-android.appspot.com/o/video_2022-11-01_10-14-02.mp4?alt=media&token=0035980c-f74d-4b22-ae6e-b8c979cd1999\", \"2\", \"2\");\r\n//        videoObjects.add(videoObject2);\r\n//\r\n//        viewPager2.setAdapter(new VideoAdapter(videoObjects));\r\n        ///////////////////////////////////////////////////////////////\r\n\r\n\r\n//        FirebaseAuth.getInstance().addAuthStateListener(new FirebaseAuth.AuthStateListener() {\r\n//            @Override\r\n//            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\r\n//                user = firebaseAuth.getCurrentUser();\r\n//                if (user != null) {\r\n//                    tvVideo.setText(\"Đã Đăng Nhập\");\r\n//                }\r\n//                else\r\n//                {\r\n//                    tvVideo.setText(\"Chưa Đăng Nhập\");\r\n//                }\r\n//            }\r\n//        });\r\n\r\n        if (user != null)\r\n        {\r\n            tvVideo.setText(\"Đã Đăng Nhập\");\r\n        }\r\n        else\r\n        {\r\n            tvVideo.setText(\"Chưa Đăng Nhập\");\r\n        }\r\n\r\n\r\n    }//on Create\r\n\r\n    @Override public void onStart() {\r\n        super.onStart();\r\n//        loadVideos();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        if (view.getId() == btnProfile.getId())\r\n        {\r\n            if (user!=null)\r\n            {\r\n                Bundle bundle = new Bundle();\r\n                bundle.putString(\"id\", user.getUid());\r\n                Intent intent = new Intent(HomeScreenActivity.this, ProfileActivity.class);\r\n                intent.putExtras(bundle);\r\n                startActivity(intent);\r\n            }\r\n            else\r\n            {\r\n                Intent intent = new Intent(HomeScreenActivity.this, MainActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        }\r\n\r\n        if (view.getId() == btnSearch.getId())\r\n        {\r\n            Intent intent = new Intent(HomeScreenActivity.this, SearchActivity.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n        if (view.getId() == R.id.btn_add_video) {\r\n            Intent intent = new Intent(HomeScreenActivity.this, CameraActivity.class);\r\n            startActivity(intent);\r\n        }\r\n\r\n        if(view.getId() == btnSwipe.getId()) {\r\n//            Intent intent = new Intent(HomeScreenActivity.this,SwipeVideo.class);\r\n//            startActivity(intent);\r\n        }\r\n    }//on click\r\n\r\n\r\n    private void loadVideos() {\r\n        db.collection(\"videos\")\r\n                .get(Source.CACHE)\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                String videoId = document.get(\"videoId\", String.class);\r\n                                String authorId = document.get(\"authorId\", String.class);\r\n                                String Uri = document.get(\"videoUri\", String.class);\r\n                                String username = document.get(\"username\", String.class);\r\n                                String authorAvatarId = document.get(\"authorAvatarId\", String.class);\r\n                                String description = document.get(\"description\", String.class);\r\n                                int totalLikes = document.get(\"totalLikes\", int.class);\r\n                                int totalComments = document.get(\"totalComments\", int.class);\r\n\r\n                                Video video = new Video(videoId,Uri, authorId, authorAvatarId, description, username, totalLikes, totalComments );\r\n                                videoAdapter.addVideoObject(video);\r\n\r\n                            }\r\n                            viewPager2.setAdapter(videoAdapter);\r\n                        } else {\r\n                            Log.d(\"ERROR\", \"Error getting documents: \", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n}// activity
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/tiktokcloneproject/HomeScreenActivity.java b/app/src/main/java/com/example/tiktokcloneproject/HomeScreenActivity.java
--- a/app/src/main/java/com/example/tiktokcloneproject/HomeScreenActivity.java	(revision 6e531d6f1c77b820377cc287f09cc1ebcc092f82)
+++ b/app/src/main/java/com/example/tiktokcloneproject/HomeScreenActivity.java	(date 1669210523261)
@@ -111,7 +111,7 @@
 
     @Override public void onStart() {
         super.onStart();
-//        loadVideos();
+        loadVideos();
     }
 
 
@@ -154,7 +154,7 @@
 
     private void loadVideos() {
         db.collection("videos")
-                .get(Source.CACHE)
+                .get(Source.DEFAULT)
                 .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
                     @Override
                     public void onComplete(@NonNull Task<QuerySnapshot> task) {
@@ -166,8 +166,8 @@
                                 String username = document.get("username", String.class);
                                 String authorAvatarId = document.get("authorAvatarId", String.class);
                                 String description = document.get("description", String.class);
-                                int totalLikes = document.get("totalLikes", int.class);
-                                int totalComments = document.get("totalComments", int.class);
+                                int totalLikes =  document.get("totalLikes", Integer.class);
+                                int totalComments = document.get("totalComments", Integer.class);
 
                                 Video video = new Video(videoId,Uri, authorId, authorAvatarId, description, username, totalLikes, totalComments );
                                 videoAdapter.addVideoObject(video);
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example.tiktokcloneproject\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n\r\n    <uses-feature android:name=\"android.hardware.camera\" />\r\n\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_MEDIA_LOCATION\" />\r\n\r\n    <uses-feature android:name=\"android.hardware.location.gps\" />\r\n\r\n    <application\r\n        android:name=\".GlobalVariable\"\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.TikTokCloneProject\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".HomeScreenActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".EmailSignInActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".EmailSignupActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.VIEW\" />\r\n\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <category android:name=\"android.intent.category.BROWSABLE\" />\r\n\r\n                <data\r\n                    android:host=\"example.com\"\r\n                    android:scheme=\"https\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".SignupChoiceActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".SigninChoiceActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DescriptionVideoActivity\"\r\n            android:exported=\"false\" /> <!-- <activity -->\r\n        <!-- android:name=\".WaitingFragment\" -->\r\n        <!-- android:exported=\"false\" /> -->\r\n        <activity\r\n            android:name=\".ChangePasswordActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".FullScreenAvatarActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".SignInToDeleteActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".AccountSettingActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".SettingsAndPrivacyActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".PhoneSigninActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".DeleteAccountActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ProfileActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.VIEW\" />\r\n\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <category android:name=\"android.intent.category.BROWSABLE\" />\r\n\r\n                <data android:scheme=\"http\" />\r\n                <data android:scheme=\"https\" />\r\n                <data android:host=\"toptoptoptop.com\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".SplashScreenActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/SplashTheme\"\r\n           >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".EditProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".EmailLogInActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".LoginOptionsActivity\"\r\n            android:exported=\"false\" /> <!-- HomeScreenActivity   PhoneSignupActivity  MainActivity -->\r\n        <activity\r\n            android:name=\".PhoneSignupActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".SearchActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".FollowActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".CameraActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".CommentActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ShareAccountActivity\"\r\n            android:exported=\"false\"\r\n            android:theme=\"@android:style/Theme.Translucent.NoTitleBar.Fullscreen\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 6e531d6f1c77b820377cc287f09cc1ebcc092f82)
+++ b/app/src/main/AndroidManifest.xml	(date 1669123054475)
@@ -8,10 +8,13 @@
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.CAMERA" />
 
+
     <uses-feature android:name="android.hardware.camera" />
 
     <uses-permission android:name="android.permission.RECORD_AUDIO" />
     <uses-permission android:name="android.permission.ACCESS_MEDIA_LOCATION" />
+    <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>
+    <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY"/>
 
     <uses-feature android:name="android.hardware.location.gps" />
 
@@ -54,7 +57,8 @@
             android:exported="false" />
         <activity
             android:name=".DescriptionVideoActivity"
-            android:exported="false" /> <!-- <activity -->
+            android:exported="false">
+           </activity> <!-- <activity -->
         <!-- android:name=".WaitingFragment" -->
         <!-- android:exported="false" /> -->
         <activity
Index: app/src/main/java/com/example/tiktokcloneproject/DescriptionVideoActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tiktokcloneproject;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.content.ContentResolver;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.media.MediaMetadataRetriever;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.webkit.MimeTypeMap;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.tiktokcloneproject.model.Video;\r\nimport com.example.tiktokcloneproject.model.VideoSummary;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FieldValue;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class DescriptionVideoActivity extends FragmentActivity implements View.OnClickListener {\r\n    EditText edtDescription;\r\n    Button btnDescription;\r\n    ImageView imvShortCutVideo;\r\n    TextView txvPercent;\r\n    ProgressBar pgbPercent;\r\n    LinearLayout llProgress;\r\n    final String REGEX_HASHTAG = \"#([A-Za-z0-9_-]+)\";\r\n    private FragmentTransaction ft;\r\n    private FragmentManager fm;\r\n\r\n    String username, authorAvatarId;\r\n\r\n    Uri videoUri;\r\n//    final float maximumResolution = 1280 * 720; //720p\r\n    final long maximumDuration = 15000; //miliseconds\r\n\r\n    FirebaseAuth mAuth;\r\n    FirebaseUser user;\r\n    FirebaseFirestore db;\r\n\r\n    Validator validator;\r\n\r\n    ArrayList<String> hashtags;\r\n    String Id;\r\n    final String TAG = \"DescriptionVideoActivity\";\r\n\r\n    Handler handler = new Handler();\r\n    Bitmap thumbnail;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_description_video);\r\n\r\n        edtDescription = (EditText) findViewById(R.id.edtDescription);\r\n        btnDescription = (Button) findViewById(R.id.btnDescription);\r\n        imvShortCutVideo = (ImageView) findViewById(R.id.imvShortCutVideo);\r\n        txvPercent = (TextView) findViewById(R.id.txvPercent);\r\n        pgbPercent = (ProgressBar) findViewById(R.id.pgbPercent);\r\n        llProgress = (LinearLayout) findViewById(R.id.llProgress);\r\n\r\n        llProgress.setVisibility(View.GONE);\r\n\r\n        txvPercent.setText(\"0%\");\r\n        pgbPercent.setProgress(0);\r\n\r\n        validator = Validator.getInstance();\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n        user = mAuth.getCurrentUser();\r\n        db = FirebaseFirestore.getInstance();\r\n\r\n        fm = getSupportFragmentManager();\r\n\r\n\r\n        Intent intent = getIntent();\r\n        Bundle bundle = intent.getExtras();\r\n        String videoPath= bundle.getString(\"videoUri\");\r\n         videoUri = Uri.parse(videoPath);\r\n\r\n         hashtags = new ArrayList<>();\r\n\r\n\r\n        //get thumbnail video, duration\r\n        MediaMetadataRetriever mmr = new MediaMetadataRetriever();\r\n        mmr.setDataSource( getApplicationContext(), videoUri );\r\n        String height = mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_VIDEO_HEIGHT);\r\n        String width = mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_VIDEO_WIDTH);\r\n        String time = mmr.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION);\r\n        long timeInMillisec = Long.parseLong(time );\r\n        //time is microseconds\r\n        thumbnail = mmr.getScaledFrameAtTime( 1000000, MediaMetadataRetriever.OPTION_NEXT_SYNC, 1000, 1000 );\r\n\r\n        mmr.release();\r\n        Log.i(\"Info\", \"Resolution\"  + height + \"x\" + width + \". Time: \" + timeInMillisec / 1000);\r\n        if(!validator.isNumeric(height) || !validator.isNumeric(width)) {\r\n            Toast.makeText(getApplicationContext(), getString(R.string.error_undefined), Toast.LENGTH_SHORT).show();\r\n            moveToAnotherActivity(CameraActivity.class);\r\n        } else if(timeInMillisec > maximumDuration) {\r\n            Toast.makeText(getApplicationContext(), getString(R.string.error_upload_video), Toast.LENGTH_SHORT).show();\r\n            moveToAnotherActivity(CameraActivity.class);\r\n        }\r\n\r\n        imvShortCutVideo.setImageBitmap(thumbnail);\r\n\r\n\r\n\r\n\r\n\r\n\r\n        btnDescription.setOnClickListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        if(view.getId() == btnDescription.getId()) {\r\n            llProgress.setVisibility(View.VISIBLE);\r\n            Matcher matcher = Pattern.compile(REGEX_HASHTAG).matcher(edtDescription.getText().toString());\r\n            while(matcher.find()) {\r\n                hashtags.add(matcher.group(0));\r\n            }\r\n            Id = String.valueOf(System.currentTimeMillis());\r\n            writeHashtags(hashtags);\r\n            uploadThumbnail();\r\n            DocumentReference docRef = db.collection(\"users\").document(user.getUid());\r\n            docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                    if (task.isSuccessful()) {\r\n                        DocumentSnapshot document = task.getResult();\r\n                        if (document.exists()) {\r\n                            authorAvatarId = document.get(\"authorAvatarId\", String.class);\r\n                            username = document.get(\"username\", String.class);\r\n                            if(videoUri != null) {\r\n                                handler.post(DescriptionVideoActivity.this::uploadVideo);\r\n                            }\r\n                            Log.d(TAG, \"DocumentSnapshot data: \" + document.getData());\r\n                        } else {\r\n                            Log.d(TAG, \"No such document\");\r\n                        }\r\n                    } else {\r\n                        Log.d(TAG, \"get failed with \", task.getException());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private String getFileType(Uri videoUri) {\r\n        ContentResolver r = getContentResolver();\r\n        // get the file type ,in this case its mp4\r\n        MimeTypeMap mimeTypeMap = MimeTypeMap.getSingleton();\r\n        return mimeTypeMap.getExtensionFromMimeType(r.getType(videoUri));\r\n    }\r\n\r\n    private void uploadVideo(){\r\n\r\n            FirebaseStorage.getInstance().getReference(\"videos/\" + Id + \".\" + getFileType(videoUri))\r\n                    .putFile(videoUri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    Task<Uri> uriTask = taskSnapshot.getStorage().getDownloadUrl();\r\n                    while (!uriTask.isSuccessful()) ;\r\n                    // get the link of video\r\n                    String downloadUri = uriTask.getResult().toString();\r\n                    String description = edtDescription.getText().toString();\r\n                    Video video = new Video(Id, downloadUri,user.getUid(), username, authorAvatarId, description, hashtags);\r\n                    writeNewVideo(video);\r\n                    moveToAnotherActivity(CameraActivity.class);\r\n                    Toast.makeText(getApplicationContext(), \"Video Uploaded!!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    moveToAnotherActivity(CameraActivity.class);\r\n                    Toast.makeText(getApplicationContext(), \"Failed \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    Log.d(TAG, e.getMessage());\r\n                }\r\n            }).addOnProgressListener(new OnProgressListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onProgress(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    double progress = (100.0 * taskSnapshot.getBytesTransferred() / taskSnapshot.getTotalByteCount());\r\n                    int progressInt = (int) Math.floor(progress);\r\n                    txvPercent.setText(progressInt + \"%\");\r\n                    Log.i(TAG, progressInt + \"\");\r\n                    pgbPercent.setProgress(progressInt);\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    private void uploadThumbnail() {\r\n        // Get the data from an ImageView as bytes\r\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n        thumbnail.compress(Bitmap.CompressFormat.JPEG, 100, baos);\r\n        byte[] data = baos.toByteArray();\r\n        FirebaseStorage.getInstance().getReference(\"thumbnails/\" + Id + \".jpg\")\r\n                .putBytes(data).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                        Task<Uri> uriTask = taskSnapshot.getStorage().getDownloadUrl();\r\n                        while (!uriTask.isSuccessful()) ;\r\n                        // get the link of video\r\n                        String downloadUri = uriTask.getResult().toString();\r\n                        VideoSummary videoSummary = new VideoSummary(Id, downloadUri);\r\n                        writeNewVideoSummary(videoSummary);\r\n                        moveToAnotherActivity(CameraActivity.class);\r\n                        Toast.makeText(getApplicationContext(), \"Video Uploaded!!\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        moveToAnotherActivity(CameraActivity.class);\r\n                        Toast.makeText(getApplicationContext(), \"Failed \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                        Log.d(TAG, e.getMessage());\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    private void writeNewVideo(Video video) {\r\n\r\n        // Basic sign-in info:\r\n        Map<String, Object> videoValues = video.toMap();\r\n        db.collection(\"videos\").document(video.getVideoId())\r\n                .set(videoValues)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(TAG, \"DocumentSnapshot successfully written!\");\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(TAG, \"Error writing document\", e);\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void writeNewVideoSummary(VideoSummary video) {\r\n        Map<String, Object> videoValues = video.toMap();\r\n        Map<String, Object> childUpdates = new HashMap<>();\r\n        db.collection(\"video_summaries\").document(video.getVideoId())\r\n                .set(videoValues)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(TAG, \"DocumentSnapshot successfully written!\");\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.w(TAG, \"Error writing document\", e);\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    private void moveToAnotherActivity(Class<?> cls) {\r\n        Intent intent = new Intent(DescriptionVideoActivity.this, cls);\r\n        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        startActivity(intent);\r\n\r\n    }\r\n\r\n    private void writeHashtags(ArrayList<String> hashtags) {\r\n        ArrayList<String> videoIds = new ArrayList<>();\r\n        videoIds.add(Id);\r\n        Map<String, Object> docData = new HashMap<>();\r\n        docData.put(\"videoIds\", videoIds);\r\n         hashtags.forEach((hashtag) -> {\r\n            DocumentReference docRef = db.collection(\"hashtags\").document(hashtag);\r\n                    docRef.get()\r\n                    .addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                            if (task.isSuccessful()) {\r\n                                DocumentSnapshot document = task.getResult();\r\n                                if (document.exists()) {\r\n                                        docRef.update(\"videoIds\", FieldValue.arrayUnion(Id));\r\n                                } else {\r\n                                    docRef.set(docData);\r\n                                }\r\n                            } else {\r\n                                Log.d(TAG, \"Failed with: \", task.getException());\r\n                            }\r\n                        }\r\n                    });\r\n\r\n        });\r\n    }\r\n\r\n    private void getAuthorInfo() {\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/tiktokcloneproject/DescriptionVideoActivity.java b/app/src/main/java/com/example/tiktokcloneproject/DescriptionVideoActivity.java
--- a/app/src/main/java/com/example/tiktokcloneproject/DescriptionVideoActivity.java	(revision 6e531d6f1c77b820377cc287f09cc1ebcc092f82)
+++ b/app/src/main/java/com/example/tiktokcloneproject/DescriptionVideoActivity.java	(date 1669124088289)
@@ -1,16 +1,25 @@
 package com.example.tiktokcloneproject;
 
 import androidx.annotation.NonNull;
+import androidx.core.app.ActivityCompat;
+import androidx.core.app.NotificationCompat;
+import androidx.core.app.NotificationManagerCompat;
 import androidx.fragment.app.FragmentActivity;
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentTransaction;
 
+import android.Manifest;
+import android.app.NotificationChannel;
+import android.app.NotificationManager;
 import android.content.ContentResolver;
+import android.content.Context;
 import android.content.Intent;
+import android.content.pm.PackageManager;
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
 import android.media.MediaMetadataRetriever;
 import android.net.Uri;
+import android.os.Build;
 import android.os.Bundle;
 import android.os.Handler;
 import android.util.Log;
@@ -136,13 +145,83 @@
         imvShortCutVideo.setImageBitmap(thumbnail);
 
 
+        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_NOTIFICATION_POLICY) != PackageManager.PERMISSION_GRANTED) {
+            Toast.makeText(getApplicationContext(), "please grant permission!", Toast.LENGTH_SHORT).show();
+            ActivityCompat.requestPermissions(this,
+                    new String[]{Manifest.permission.ACCESS_NOTIFICATION_POLICY},
+                    1);
+        }
+
+        createNotificationChannel();
 
+        NotificationManagerCompat mNotifyManager =
+                NotificationManagerCompat.from(getApplicationContext());
+        NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(this, "Video");
+        mBuilder.setContentTitle("Picture Download")
+                .setContentText("Download in progress")
+                .setPriority(NotificationCompat.PRIORITY_DEFAULT)
+                .setVisibility(NotificationCompat.VISIBILITY_PUBLIC)
+                .setSmallIcon(R.drawable.icon_search);
+
+        mBuilder.setProgress(100, 0, false);
+        mNotifyManager.notify(0, mBuilder.build());
+
+// Start a lengthy operation in a background thread
+        Thread thread = new Thread(
+                new Runnable() {
+                    @Override
+                    public void run() {
+                        int incr;
+                        // Do the "lengthy" operation 20 times
+                        for (incr = 0; incr <= 100; incr+=5) {
+                            // Sets the progress indicator to a max value, the
+                            // current completion percentage, and "determinate"
+                            // state
+                            mBuilder.setProgress(100, incr, false);
+                            // Displays the progress bar for the first time.
+                            mNotifyManager.notify(0, mBuilder.build());
+                            // Sleeps the thread, simulating an operation
+                            // that takes time
+                            try {
+                                // Sleep for 5 seconds
+                                Thread.sleep(1000);
+                            } catch (InterruptedException e) {
+                                Log.d(TAG, "sleep failure");
+                            }
+                        }
+                        // When the loop is finished, updates the notification
+                        mBuilder.setContentText("Download complete")
+                                // Removes the progress bar
+                                .setProgress(0,0,false);
+                        mNotifyManager.notify(0, mBuilder.build());
+                    }
+                }
+// Starts the thread by calling the run() method in its Runnable
+        );
+        thread.start();
 
 
 
         btnDescription.setOnClickListener(this);
     }
 
+    private void createNotificationChannel() {
+        // Create the NotificationChannel, but only on API 26+ because
+        // the NotificationChannel class is new and not in the support library
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+            CharSequence name = "Video";
+            String description = "Video";
+            int importance = NotificationManager.IMPORTANCE_DEFAULT;
+            NotificationChannel channel = new NotificationChannel("Video", name, importance);
+            channel.setSound(null, null);
+            channel.setDescription(description);
+            // Register the channel with the system; you can't change the importance
+            // or other notification behaviors after this
+            NotificationManager notificationManager = getSystemService(NotificationManager.class);
+            notificationManager.createNotificationChannel(channel);
+        }
+    }
+
     @Override
     public void onClick(View view) {
         if(view.getId() == btnDescription.getId()) {
@@ -186,6 +265,28 @@
     }
 
     private void uploadVideo(){
+        String channelId = "Video";
+        int notificationId = 1234;
+        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(this);
+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, channelId);
+        builder.setContentTitle("Video upload")
+                .setContentText("Download in progress")
+                .setPriority(NotificationCompat.PRIORITY_LOW)
+                .setSmallIcon(R.drawable.icon_search);
+
+// Issue the initial notification with zero progress
+        int PROGRESS_MAX = 100;
+        int PROGRESS_CURRENT = 0;
+        builder.setProgress(PROGRESS_MAX, PROGRESS_CURRENT, false);
+        notificationManager.notify(notificationId, builder.build());
+
+// Do the job here that tracks the progress.
+// Usually, this should be in a
+// worker thread
+// To show progress, update PROGRESS_CURRENT and update the notification with:
+// builder.setProgress(PROGRESS_MAX, PROGRESS_CURRENT, false);
+// notificationManager.notify(notificationId, builder.build());
+
 
             FirebaseStorage.getInstance().getReference("videos/" + Id + "." + getFileType(videoUri))
                     .putFile(videoUri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
@@ -198,6 +299,10 @@
                     String description = edtDescription.getText().toString();
                     Video video = new Video(Id, downloadUri,user.getUid(), username, authorAvatarId, description, hashtags);
                     writeNewVideo(video);
+                    // When done, update the notification one more time to remove the progress bar
+                    builder.setContentText("Download complete")
+                            .setProgress(0,0,false);
+                    notificationManager.notify(notificationId, builder.build());
                     moveToAnotherActivity(CameraActivity.class);
                     Toast.makeText(getApplicationContext(), "Video Uploaded!!", Toast.LENGTH_SHORT).show();
                 }
@@ -215,6 +320,8 @@
                     int progressInt = (int) Math.floor(progress);
                     txvPercent.setText(progressInt + "%");
                     Log.i(TAG, progressInt + "");
+                    builder.setProgress(PROGRESS_MAX, progressInt, false);
+                    notificationManager.notify(notificationId, builder.build());
                     pgbPercent.setProgress(progressInt);
                 }
             });
